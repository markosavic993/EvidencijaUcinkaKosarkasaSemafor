package forme;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */


import domen.Tim;
import domen.Utakmica;
import java.awt.Dimension;
import java.awt.Image;
import java.awt.Toolkit;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.io.IOException;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.Calendar;
import java.util.Date;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import komunikacija.KlijentKomunikacija;
import transfer.TransferObjekatOdgovor;
import transfer.TransferObjekatZahtev;
import util.Konstante;

/**
 *
 * @author Marko
 */
public class FrmIzborUtakmice extends javax.swing.JDialog {

    TransferObjekatZahtev toZahtev = new TransferObjekatZahtev();
    TransferObjekatOdgovor toOdgovor = new TransferObjekatOdgovor();

    /**
     * Creates new form FrmDodajUtakmicu
     */
    public FrmIzborUtakmice(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        pozicionirajFormu();
        napuniComboe();
        popuniComboZaDatum();
        postaviIkonicu();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jcomboDomacin = new javax.swing.JComboBox();
        jcomboGost = new javax.swing.JComboBox();
        jLabel2 = new javax.swing.JLabel();
        jbtnDodaj = new javax.swing.JButton();
        jcomboGodina = new javax.swing.JComboBox();
        jLabel3 = new javax.swing.JLabel();
        jcomboMesec = new javax.swing.JComboBox();
        jcomboDan = new javax.swing.JComboBox();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Nova utakmica");

        jLabel1.setText("Domaćin: ");

        jcomboDomacin.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        jcomboGost.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        jLabel2.setText("Gost:");

        jbtnDodaj.setText("Dalje");
        jbtnDodaj.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtnDodajActionPerformed(evt);
            }
        });

        jcomboGodina.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        jLabel3.setText("Datum (G/M/D): ");

        jcomboMesec.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        jcomboDan.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(46, 46, 46)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jbtnDodaj)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addComponent(jLabel2)
                            .addComponent(jLabel3))
                        .addGap(33, 33, 33)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jcomboGost, javax.swing.GroupLayout.PREFERRED_SIZE, 212, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jcomboDomacin, javax.swing.GroupLayout.PREFERRED_SIZE, 212, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jcomboGodina, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jcomboMesec, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jcomboDan, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addContainerGap(30, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jcomboDomacin, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jcomboGost, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jcomboGodina, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3)
                    .addComponent(jcomboMesec, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jcomboDan, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jbtnDodaj, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(23, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jbtnDodajActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtnDodajActionPerformed
        SimpleDateFormat sdf = new SimpleDateFormat("dd.MM.yyyy.");

        String datum = jcomboDan.getSelectedItem() + "." + (jcomboMesec.getSelectedIndex() + 1)
                + "." + jcomboGodina.getSelectedItem() + ".";
        Date datumOdigravanja = null;
        try {
            datumOdigravanja = sdf.parse(datum);
        } catch (ParseException ex) {
            JOptionPane.showMessageDialog(this, "Datum nije u odgovarjućem formatu!");
            return;
        }

        toZahtev.setOperacija(Konstante.VRATI_BROJ_UTAKMICA);
        toZahtev.setParametar(null);
        KlijentKomunikacija.getInstance().posaljiZahtev(toZahtev);
        try {
            toOdgovor = KlijentKomunikacija.getInstance().primiOdgovor();
            if (toOdgovor.getIzuzetak() != null) {
                try {
                    throw (Exception) toOdgovor.getIzuzetak();
                } catch (Exception ex) {
                    
                }
            }
        } catch (IOException | ClassNotFoundException ex) {
            Logger.getLogger(FrmIzborUtakmice.class.getName()).log(Level.SEVERE, null, ex);
        }

        int id = (int) toOdgovor.getRezultat() + 1;
        Utakmica u = new Utakmica(id, datumOdigravanja, (Tim) jcomboDomacin.getSelectedItem(), (Tim) jcomboGost.getSelectedItem());
        toZahtev.setOperacija(Konstante.DODAJ_NOVU_UTAKMICU);
        toZahtev.setParametar(u);
        KlijentKomunikacija.getInstance().posaljiZahtev(toZahtev);
        try {
            toOdgovor = KlijentKomunikacija.getInstance().primiOdgovor();
            if (toOdgovor.getIzuzetak() != null) {
                try {
                    throw (Exception) toOdgovor.getIzuzetak();
                } catch (Exception ex) {
                    
                }
            }
        } catch (IOException ex) {
            Logger.getLogger(FrmIzborUtakmice.class.getName()).log(Level.SEVERE, null, ex);
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(FrmIzborUtakmice.class.getName()).log(Level.SEVERE, null, ex);
        }

        JOptionPane.showMessageDialog(this, "Utakmica uspešno sačuvana!");
        this.dispose();

        FrmGlavna forma = new FrmGlavna(u);
        forma.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_jbtnDodajActionPerformed

    /**
     * @param args the command line arguments
     */
//    public static void main(String args[]) {
//        /* Set the Nimbus look and feel */
//        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
//        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
//         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
//         */
//        try {
//            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
//                if ("Nimbus".equals(info.getName())) {
//                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
//                    break;
//                }
//            }
//        } catch (ClassNotFoundException ex) {
//            java.util.logging.Logger.getLogger(FrmIzborUtakmice.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (InstantiationException ex) {
//            java.util.logging.Logger.getLogger(FrmIzborUtakmice.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (IllegalAccessException ex) {
//            java.util.logging.Logger.getLogger(FrmIzborUtakmice.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
//            java.util.logging.Logger.getLogger(FrmIzborUtakmice.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        }
//        //</editor-fold>
//        //</editor-fold>
//        //</editor-fold>
//        //</editor-fold>
//
//        /* Create and display the dialog */
//        java.awt.EventQueue.invokeLater(new Runnable() {
//            public void run() {
//                FrmIzborUtakmice dialog = new FrmIzborUtakmice(new javax.swing.JFrame(), true);
//                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
//                    @Override
//                    public void windowClosing(java.awt.event.WindowEvent e) {
//                        System.exit(0);
//                    }
//                });
//                dialog.setVisible(true);
//            }
//        });
//    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JButton jbtnDodaj;
    private javax.swing.JComboBox jcomboDan;
    private javax.swing.JComboBox jcomboDomacin;
    private javax.swing.JComboBox jcomboGodina;
    private javax.swing.JComboBox jcomboGost;
    private javax.swing.JComboBox jcomboMesec;
    // End of variables declaration//GEN-END:variables

    private void napuniComboe() {
        toZahtev.setOperacija(Konstante.VRATI_TIMOVE);
        toZahtev.setParametar(null);
        KlijentKomunikacija.getInstance().posaljiZahtev(toZahtev);
        try {
            toOdgovor = KlijentKomunikacija.getInstance().primiOdgovor();
            if (toOdgovor.getIzuzetak() != null) {
                try {
                    throw (Exception) toOdgovor.getIzuzetak();
                } catch (Exception ex) {
                   
                }
            }
        } catch (IOException | ClassNotFoundException ex) {
            //Logger.getLogger(FrmIzborUtakmice.class.getName()).log(Level.SEVERE, null, ex);
        }

        List<Tim> timovi = (List<Tim>) toOdgovor.getRezultat();

        jcomboDomacin.removeAllItems();
        for (Tim tim : timovi) {
            jcomboDomacin.addItem(tim);
        }
        Tim t = (Tim) jcomboDomacin.getSelectedItem();
        napuniComboGost(t);

        jcomboDomacin.addActionListener(new ActionListener() {

            @Override
            public void actionPerformed(ActionEvent e) {
                Tim t = (Tim) jcomboDomacin.getSelectedItem();
                napuniComboGost(t);
            }
        });
    }

    private void popuniComboZaDatum() {
        jcomboGodina.removeAllItems();
        int trenutnaGodina = Calendar.getInstance().get(Calendar.YEAR);
        for (int i = trenutnaGodina; i >= 1950; i--) {
            jcomboGodina.addItem(i);
        }
        jcomboMesec.removeAllItems();
        jcomboMesec.addItem("Januar");
        jcomboMesec.addItem("Februar");
        jcomboMesec.addItem("Mart");
        jcomboMesec.addItem("April");
        jcomboMesec.addItem("Maj");
        jcomboMesec.addItem("Jun");
        jcomboMesec.addItem("Jul");
        jcomboMesec.addItem("Avgust");
        jcomboMesec.addItem("Septembar");
        jcomboMesec.addItem("Oktobar");
        jcomboMesec.addItem("Novembar");
        jcomboMesec.addItem("Decembar");

        jcomboDan.removeAllItems();
        for (int i = 1; i <= 31; i++) {
            jcomboDan.addItem(i);
        }

        jcomboMesec.addActionListener(new ActionListener() {

            @Override
            public void actionPerformed(ActionEvent e) {
                popuniComboDan(jcomboGodina.getSelectedItem(), jcomboMesec.getSelectedItem());
            }
        });

    }

    private void popuniComboDan(Object godina, Object mesec) {
        jcomboDan.removeAllItems();
        if (mesec.equals("Februar")) {
            for (int i = 1; i <= 28; i++) {
                jcomboDan.addItem(i);
            }
            if ((int) godina % 4 == 0) {
                jcomboDan.addItem(29);
            }

            return;
        }

        if (mesec.equals("April") || mesec.equals("Jun") || mesec.equals("Septembar") || mesec.equals("Novembar")) {
            for (int i = 1; i <= 30; i++) {
                jcomboDan.addItem(i);
            }
        } else {
            for (int i = 1; i <= 31; i++) {
                jcomboDan.addItem(i);
            }
        }
    }

    private void pozicionirajFormu() {
        Dimension dim = Toolkit.getDefaultToolkit().getScreenSize();
        this.setLocation(dim.width / 2 - this.getSize().width / 2, dim.height / 2 - this.getSize().height / 2);
    }

    private void napuniComboGost(Tim t) {
        toZahtev.setOperacija(Konstante.VRATI_TIMOVE);
        toZahtev.setParametar(null);
        KlijentKomunikacija.getInstance().posaljiZahtev(toZahtev);
        try {
            toOdgovor = KlijentKomunikacija.getInstance().primiOdgovor();
            if (toOdgovor.getIzuzetak() != null) {
                try {
                    throw (Exception) toOdgovor.getIzuzetak();
                } catch (Exception ex) {
                   
                }
            }
        } catch (IOException ex) {
            Logger.getLogger(FrmIzborUtakmice.class.getName()).log(Level.SEVERE, null, ex);
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(FrmIzborUtakmice.class.getName()).log(Level.SEVERE, null, ex);
        }

        List<Tim> timovi = (List<Tim>) toOdgovor.getRezultat();
        jcomboGost.removeAllItems();
        for (Tim tim : timovi) {

            jcomboGost.addItem(tim);
        }
        jcomboGost.removeItem(t);

    }
    
    private void postaviIkonicu() {
        java.net.URL url = ClassLoader.getSystemResource("forme/ikonica.png");
        Toolkit kit = Toolkit.getDefaultToolkit();
        Image myImg = kit.createImage(url);

        this.setIconImage(myImg);
    }
}
